{
  "version": 3,
  "sources": ["../lib/data.json", "../lib/main.js", "../lib/enum.js", "../lib/index.js"],
  "sourcesContent": ["[\n  \"two-sided\",\n  \"less\",\n  \"greater\"\n]\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar DATA = require( './data.json' );\n\n\n// MAIN //\n\n/**\n* Returns a list of Z-test alternative hypotheses.\n*\n* @returns {StringArray} list of alternative hypotheses\n*\n* @example\n* var list = alternatives();\n* // e.g., returns [ 'two-sided', 'less', 'greater' ]\n*/\nfunction alternatives() {\n\treturn DATA.slice();\n}\n\n\n// EXPORTS //\n\nmodule.exports = alternatives;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an object mapping supported alternatives to integer values for purposes of C inter-operation.\n*\n* ## Notes\n*\n* -   Downstream consumers of this mapping should **not** rely on specific integer values (e.g., `TWO_SIDED == 0`). Instead, the object should be used in an opaque manner.\n* -   The main purpose of this function is JavaScript and C inter-operation.\n*\n* @returns {Object} object mapping supported alternatives to integer values\n*\n* @example\n* var table = enumerated();\n* // returns <Object>\n*/\nfunction enumerated() {\n\t// NOTE: the following should match the C `alternatives.h` enumeration!!!!\n\treturn {\n\t\t// Mean is not equal to the null hypothesis value:\n\t\t'two-sided': 0,\n\n\t\t// Mean is less than the null hypothesis value:\n\t\t'less': 1,\n\n\t\t// Mean is greater than the null hypothesis value:\n\t\t'greater': 2\n\t};\n}\n\n\n// EXPORTS //\n\nmodule.exports = enumerated;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a list of Z-test alternative hypotheses.\n*\n* @module @stdlib/stats-base-ztest-alternatives\n*\n* @example\n* var alternatives = require( '@stdlib/stats-base-ztest-alternatives' );\n*\n* var list = alternatives();\n* // e.g., returns [ 'two-sided', 'less', 'greater' ]\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar enumeration = require( './enum.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'enum', enumeration );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n\n// exports: { \"enum\": \"main.enum\" }\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,CAAAA,EAAA,SACE,YACA,OACA,SACF,ICJA,IAAAC,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAO,IAcX,SAASC,GAAe,CACvB,OAAOD,EAAK,MAAM,CACnB,CAKAD,EAAO,QAAUE,IC3CjB,IAAAC,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAoCA,SAASC,GAAa,CAErB,MAAO,CAEN,YAAa,EAGb,KAAQ,EAGR,QAAW,CACZ,CACD,CAKAD,EAAO,QAAUC,ICnBjB,IAAIC,EAAc,QAAS,uDAAwD,EAC/EC,EAAO,IACPC,EAAc,IAKlBF,EAAaC,EAAM,OAAQC,CAAY,EAKvC,OAAO,QAAUD",
  "names": ["require_data", "__commonJSMin", "exports", "module", "require_main", "__commonJSMin", "exports", "module", "DATA", "alternatives", "require_enum", "__commonJSMin", "exports", "module", "enumerated", "setReadOnly", "main", "enumeration"]
}
